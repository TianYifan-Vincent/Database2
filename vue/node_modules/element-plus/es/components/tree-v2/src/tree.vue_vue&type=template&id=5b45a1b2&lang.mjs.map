{"version":3,"file":"tree.vue_vue&type=template&id=5b45a1b2&lang.mjs","sources":["../../../../../../packages/components/tree-v2/src/tree.vue?vue&type=template&id=5b45a1b2&lang.js"],"sourcesContent":["<template>\n  <div\n    class=\"el-tree\"\n    :class=\"{\n      'el-tree--highlight-current': highlightCurrent,\n    }\"\n    role=\"tree\"\n  >\n    <fixed-size-list\n      v-if=\"isNotEmpty\"\n      class-name=\"el-tree-virtual-list\"\n      :data=\"flattenTree\"\n      :total=\"flattenTree.length\"\n      :height=\"height\"\n      :item-size=\"itemSize\"\n      :perf-mode=\"perfMode\"\n    >\n      <template #default=\"{ data, index, style }\">\n        <el-tree-node\n          :key=\"data[index].key\"\n          :style=\"style\"\n          :node=\"data[index]\"\n          :expanded=\"isExpanded(data[index])\"\n          :show-checkbox=\"showCheckbox\"\n          :checked=\"isChecked(data[index])\"\n          :indeterminate=\"isIndeterminate(data[index])\"\n          :disabled=\"isDisabled(data[index])\"\n          :current=\"isCurrent(data[index])\"\n          :hidden-expand-icon=\"isForceHiddenExpandIcon(data[index])\"\n          @click=\"handleNodeClick\"\n          @toggle=\"toggleExpand\"\n          @check=\"handleNodeCheck\"\n        ></el-tree-node>\n      </template>\n    </fixed-size-list>\n    <div v-else class=\"el-tree__empty-block\">\n      <span class=\"el-tree__empty-text\">{{\n        emptyText ?? t('el.tree.emptyText')\n      }}</span>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, getCurrentInstance, provide } from 'vue'\nimport { useLocaleInject } from '@element-plus/hooks'\nimport { FixedSizeList } from '@element-plus/components/virtual-list'\nimport { useTree } from './composables/useTree'\nimport ElTreeNode from './tree-node.vue'\nimport { ROOT_TREE_INJECTION_KEY, treeEmits, treeProps } from './virtual-tree'\nimport type { TreeProps } from './types'\n\nexport default defineComponent({\n  name: 'ElTreeV2',\n  components: {\n    ElTreeNode,\n    FixedSizeList,\n  },\n  props: treeProps,\n  emits: treeEmits,\n  setup(props: TreeProps, ctx) {\n    provide(ROOT_TREE_INJECTION_KEY, {\n      ctx,\n      props,\n      instance: getCurrentInstance(),\n    })\n    const { t } = useLocaleInject()\n    const {\n      flattenTree,\n      isNotEmpty,\n      toggleExpand,\n      isExpanded,\n      isIndeterminate,\n      isChecked,\n      isDisabled,\n      isCurrent,\n      isForceHiddenExpandIcon,\n      toggleCheckbox,\n      handleNodeClick,\n      handleNodeCheck,\n      // expose\n      getCurrentNode,\n      getCurrentKey,\n      setCurrentKey,\n      getCheckedKeys,\n      getCheckedNodes,\n      getHalfCheckedKeys,\n      getHalfCheckedNodes,\n      setChecked,\n      setCheckedKeys,\n      filter,\n      setData,\n    } = useTree(props, ctx.emit)\n\n    ctx.expose({\n      getCurrentNode,\n      getCurrentKey,\n      setCurrentKey,\n      getCheckedKeys,\n      getCheckedNodes,\n      getHalfCheckedKeys,\n      getHalfCheckedNodes,\n      setChecked,\n      setCheckedKeys,\n      filter,\n      setData,\n    })\n\n    return {\n      t,\n      flattenTree,\n      itemSize: 26,\n      isNotEmpty,\n      toggleExpand,\n      toggleCheckbox,\n      isExpanded,\n      isIndeterminate,\n      isChecked,\n      isDisabled,\n      isCurrent,\n      isForceHiddenExpandIcon,\n      handleNodeClick,\n      handleNodeCheck,\n    }\n  },\n})\n</script>\n"],"names":["_createElementBlock","_createBlock","_createVNode","_createElementVNode"],"mappings":";;;;EAmCgB,OAAM;AAAA;qBACV,OAAM;;;;;sBAnChBA;IACE,uBAAM;;;IAIN,MAAK;AAAA;IAGG,gCADRC;;MAEE,cAAW;AAAA,MACV,MAAM;MACN,OAAO,iBAAY;AAAA,MACnB,QAAQ;MACR,aAAW;MACX,aAAW;;MAED,iBACT,GADoB,MAAM,OAAO;QACjCC;UACG,KAAK,KAAK,OAAO;AAAA,UACjB,sBAAO;AAAA,UACP,MAAM,KAAK;AAAA,UACX,UAAU,gBAAW,KAAK;AAAA,UAC1B,iBAAe;UACf,SAAS,eAAU,KAAK;AAAA,UACxB,eAAe,qBAAgB,KAAK;AAAA,UACpC,UAAU,gBAAW,KAAK;AAAA,UAC1B,SAAS,eAAU,KAAK;AAAA,UACxB,sBAAoB,6BAAwB,KAAK;AAAA,UACjD,SAAO;UACP,UAAQ;UACR,SAAO;;;;kFAIdF,0BAAA;MACEG,2BAAA,4BACE,yBAAA,YAAa;;;;;;;"}