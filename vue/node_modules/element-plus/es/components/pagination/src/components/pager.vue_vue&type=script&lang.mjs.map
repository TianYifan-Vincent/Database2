{"version":3,"file":"pager.vue_vue&type=script&lang.mjs","sources":["../../../../../../../packages/components/pagination/src/components/pager.vue"],"sourcesContent":["<template>\n  <ul class=\"el-pager\" @click=\"onPagerClick\" @keyup.enter=\"onEnter\">\n    <li\n      v-if=\"pageCount > 0\"\n      :class=\"{ active: currentPage === 1, disabled }\"\n      class=\"number\"\n      :aria-current=\"currentPage === 1\"\n      tabindex=\"0\"\n    >\n      1\n    </li>\n    <li\n      v-if=\"showPrevMore\"\n      class=\"el-icon more btn-quickprev\"\n      :class=\"{ disabled }\"\n      @mouseenter=\"onMouseenter('left')\"\n      @mouseleave=\"quickPrevHover = false\"\n    >\n      <d-arrow-left v-if=\"quickPrevHover\" />\n      <more-filled v-else />\n    </li>\n    <li\n      v-for=\"pager in pagers\"\n      :key=\"pager\"\n      :class=\"{ active: currentPage === pager, disabled }\"\n      class=\"number\"\n      :aria-current=\"currentPage === pager\"\n      tabindex=\"0\"\n    >\n      {{ pager }}\n    </li>\n    <li\n      v-if=\"showNextMore\"\n      class=\"el-icon more btn-quicknext\"\n      :class=\"{ disabled }\"\n      @mouseenter=\"onMouseenter('right')\"\n      @mouseleave=\"quickNextHover = false\"\n    >\n      <d-arrow-right v-if=\"quickNextHover\" />\n      <more-filled v-else />\n    </li>\n    <li\n      v-if=\"pageCount > 1\"\n      :class=\"{ active: currentPage === pageCount, disabled }\"\n      class=\"number\"\n      :aria-current=\"currentPage === pageCount\"\n      tabindex=\"0\"\n    >\n      {{ pageCount }}\n    </li>\n  </ul>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, watchEffect } from 'vue'\nimport { MoreFilled, DArrowLeft, DArrowRight } from '@element-plus/icons'\n\nconst paginationPagerProps = {\n  currentPage: {\n    type: Number,\n    default: 1,\n  },\n  pageCount: {\n    type: Number,\n    required: true,\n  },\n  pagerCount: {\n    type: Number,\n    default: 7,\n  },\n  disabled: Boolean,\n} as const\n\nexport default defineComponent({\n  name: 'ElPaginationPager',\n\n  components: {\n    DArrowLeft,\n    DArrowRight,\n    MoreFilled,\n  },\n  props: paginationPagerProps,\n  emits: ['change'],\n\n  setup(props, { emit }) {\n    const showPrevMore = ref(false)\n    const showNextMore = ref(false)\n    const quickPrevHover = ref(false)\n    const quickNextHover = ref(false)\n\n    const pagers = computed(() => {\n      const pagerCount = props.pagerCount\n      const halfPagerCount = (pagerCount - 1) / 2\n      const currentPage = Number(props.currentPage)\n      const pageCount = Number(props.pageCount)\n\n      let showPrevMore = false\n      let showNextMore = false\n      if (pageCount > pagerCount) {\n        if (currentPage > pagerCount - halfPagerCount) {\n          showPrevMore = true\n        }\n        if (currentPage < pageCount - halfPagerCount) {\n          showNextMore = true\n        }\n      }\n      const array: number[] = []\n      if (showPrevMore && !showNextMore) {\n        const startPage = pageCount - (pagerCount - 2)\n        for (let i = startPage; i < pageCount; i++) {\n          array.push(i)\n        }\n      } else if (!showPrevMore && showNextMore) {\n        for (let i = 2; i < pagerCount; i++) {\n          array.push(i)\n        }\n      } else if (showPrevMore && showNextMore) {\n        const offset = Math.floor(pagerCount / 2) - 1\n        for (let i = currentPage - offset; i <= currentPage + offset; i++) {\n          array.push(i)\n        }\n      } else {\n        for (let i = 2; i < pageCount; i++) {\n          array.push(i)\n        }\n      }\n\n      return array\n    })\n\n    watchEffect(() => {\n      const halfPagerCount = (props.pagerCount - 1) / 2\n\n      showPrevMore.value = false\n      showNextMore.value = false\n\n      if (props.pageCount > props.pagerCount) {\n        if (props.currentPage > props.pagerCount - halfPagerCount) {\n          showPrevMore.value = true\n        }\n        if (props.currentPage < props.pageCount - halfPagerCount) {\n          showNextMore.value = true\n        }\n      }\n    })\n\n    function onMouseenter(direction: 'left' | 'right') {\n      if (props.disabled) return\n      if (direction === 'left') {\n        quickPrevHover.value = true\n      } else {\n        quickNextHover.value = true\n      }\n    }\n\n    function onEnter(e: UIEvent) {\n      const target = e.target as HTMLElement\n      if (\n        target.tagName.toLowerCase() === 'li' &&\n        Array.from(target.classList).includes('number')\n      ) {\n        const newPage = Number(target.textContent)\n        if (newPage !== props.currentPage) {\n          emit('change', newPage)\n        }\n      }\n    }\n\n    function onPagerClick(event: UIEvent) {\n      const target = event.target as HTMLElement\n      if (target.tagName.toLowerCase() === 'ul' || props.disabled) {\n        return\n      }\n\n      let newPage = Number(target.textContent)\n      const pageCount = props.pageCount\n      const currentPage = props.currentPage\n      const pagerCountOffset = props.pagerCount - 2\n      if (target.className.includes('more')) {\n        if (target.className.includes('quickprev')) {\n          newPage = currentPage - pagerCountOffset\n        } else if (target.className.includes('quicknext')) {\n          newPage = currentPage + pagerCountOffset\n        }\n      }\n      if (!isNaN(newPage)) {\n        if (newPage < 1) {\n          newPage = 1\n        }\n        if (newPage > pageCount) {\n          newPage = pageCount\n        }\n      }\n      if (newPage !== currentPage) {\n        emit('change', newPage)\n      }\n    }\n\n    return {\n      showPrevMore,\n      showNextMore,\n      quickPrevHover,\n      quickNextHover,\n      pagers,\n\n      onMouseenter,\n      onPagerClick,\n      onEnter,\n    }\n  },\n})\n</script>\n"],"names":[],"mappings":"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"}