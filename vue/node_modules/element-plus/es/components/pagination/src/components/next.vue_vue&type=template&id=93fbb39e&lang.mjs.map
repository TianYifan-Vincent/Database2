{"version":3,"file":"next.vue_vue&type=template&id=93fbb39e&lang.mjs","sources":["../../../../../../../packages/components/pagination/src/components/next.vue?vue&type=template&id=93fbb39e&lang.js"],"sourcesContent":["<template>\n  <button\n    type=\"button\"\n    class=\"btn-next\"\n    :disabled=\"internalDisabled\"\n    :aria-disabled=\"internalDisabled\"\n    @click=\"$emit('click', $event)\"\n  >\n    <span v-if=\"nextText\">{{ nextText }}</span>\n    <el-icon v-else><arrow-right /></el-icon>\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowRight } from '@element-plus/icons'\n\nconst paginationNextProps = {\n  disabled: Boolean,\n  currentPage: {\n    type: Number,\n    default: 1,\n  },\n  pageCount: {\n    type: Number,\n    default: 50,\n  },\n  nextText: {\n    type: String,\n    default: '',\n  },\n} as const\n\nexport default defineComponent({\n  name: 'ElPaginationNext',\n\n  components: {\n    ElIcon,\n    ArrowRight,\n  },\n  props: paginationNextProps,\n  emits: ['click'],\n\n  setup(props) {\n    const internalDisabled = computed(\n      () =>\n        props.disabled ||\n        props.currentPage === props.pageCount ||\n        props.pageCount === 0\n    )\n\n    return {\n      internalDisabled,\n    }\n  },\n})\n</script>\n"],"names":["_createElementBlock","_createBlock","_createVNode"],"mappings":";;;;;;;sBACEA;IACE,MAAK;AAAA,IACL,OAAM;AAAA,IACL,UAAU;IACV,iBAAe;IACf,+CAAO,oBAAe;AAAA;IAEX,8BAAZA,uDAAyB,oCACzBC;uBAAgB;QAAAC,YAAe;AAAA;AAAA;;;;;;;"}