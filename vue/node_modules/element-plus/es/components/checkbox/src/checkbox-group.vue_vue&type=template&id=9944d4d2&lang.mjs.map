{"version":3,"file":"checkbox-group.vue_vue&type=template&id=9944d4d2&lang.mjs","sources":["../../../../../../packages/components/checkbox/src/checkbox-group.vue?vue&type=template&id=9944d4d2&lang.js"],"sourcesContent":["<template>\n  <div class=\"el-checkbox-group\" role=\"group\" aria-label=\"checkbox-group\">\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  computed,\n  watch,\n  provide,\n  nextTick,\n  toRefs,\n} from 'vue'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\nimport { isValidComponentSize } from '@element-plus/utils/validators'\nimport { useCheckboxGroup } from './useCheckbox'\n\nimport type { PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/utils/types'\n\nexport default defineComponent({\n  name: 'ElCheckboxGroup',\n\n  props: {\n    modelValue: {\n      type: [Object, Boolean, Array],\n      default: () => undefined,\n    },\n    disabled: Boolean,\n    min: {\n      type: Number,\n      default: undefined,\n    },\n    max: {\n      type: Number,\n      default: undefined,\n    },\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    fill: {\n      type: String,\n      default: undefined,\n    },\n    textColor: {\n      type: String,\n      default: undefined,\n    },\n  },\n\n  emits: [UPDATE_MODEL_EVENT, 'change'],\n\n  setup(props, ctx) {\n    const { elFormItem, elFormItemSize, ELEMENT } = useCheckboxGroup()\n    const checkboxGroupSize = computed(\n      () => props.size || elFormItemSize.value || ELEMENT.size\n    )\n\n    const changeEvent = (value) => {\n      ctx.emit(UPDATE_MODEL_EVENT, value)\n      nextTick(() => {\n        ctx.emit('change', value)\n      })\n    }\n\n    const modelValue = computed({\n      get() {\n        return props.modelValue\n      },\n      set(val) {\n        changeEvent(val)\n      },\n    })\n\n    provide('CheckboxGroup', {\n      name: 'ElCheckboxGroup',\n      modelValue,\n      ...toRefs(props),\n      checkboxGroupSize,\n      changeEvent,\n    })\n\n    watch(\n      () => props.modelValue,\n      () => {\n        elFormItem.validate?.('change')\n      }\n    )\n  },\n})\n</script>\n"],"names":["_createElementBlock","_renderSlot"],"mappings":";;;EACO,OAAM;AAAA,EAAoB,MAAK;AAAA,EAAQ,cAAW;AAAA;;sBAAvDA,0BAAA;IACEC;;;;;;"}