{"version":3,"file":"filter-panel.vue_vue&type=script&lang.mjs","sources":["../../../../../../packages/components/table/src/filter-panel.vue"],"sourcesContent":["<template>\n  <el-popper\n    ref=\"tooltip\"\n    v-model:visible=\"tooltipVisible\"\n    :offset=\"0\"\n    :placement=\"placement\"\n    :show-arrow=\"false\"\n    :stop-popper-mouse-event=\"false\"\n    :effect=\"Effect.LIGHT\"\n    pure\n    manual-mode\n    popper-class=\"el-table-filter\"\n    append-to-body\n  >\n    <template #default>\n      <div v-if=\"multiple\">\n        <div class=\"el-table-filter__content\">\n          <el-scrollbar wrap-class=\"el-table-filter__wrap\">\n            <el-checkbox-group\n              v-model=\"filteredValue\"\n              class=\"el-table-filter__checkbox-group\"\n            >\n              <el-checkbox\n                v-for=\"filter in filters\"\n                :key=\"filter.value\"\n                :label=\"filter.value\"\n              >\n                {{ filter.text }}\n              </el-checkbox>\n            </el-checkbox-group>\n          </el-scrollbar>\n        </div>\n        <div class=\"el-table-filter__bottom\">\n          <button\n            :class=\"{ 'is-disabled': filteredValue.length === 0 }\"\n            :disabled=\"filteredValue.length === 0\"\n            type=\"button\"\n            @click=\"handleConfirm\"\n          >\n            {{ t('el.table.confirmFilter') }}\n          </button>\n          <button type=\"button\" @click=\"handleReset\">\n            {{ t('el.table.resetFilter') }}\n          </button>\n        </div>\n      </div>\n      <ul v-else class=\"el-table-filter__list\">\n        <li\n          :class=\"{\n            'is-active': filterValue === undefined || filterValue === null,\n          }\"\n          class=\"el-table-filter__list-item\"\n          @click=\"handleSelect(null)\"\n        >\n          {{ t('el.table.clearFilter') }}\n        </li>\n        <li\n          v-for=\"filter in filters\"\n          :key=\"filter.value\"\n          :class=\"{ 'is-active': isActive(filter) }\"\n          :label=\"filter.value\"\n          class=\"el-table-filter__list-item\"\n          @click=\"handleSelect(filter.value)\"\n        >\n          {{ filter.text }}\n        </li>\n      </ul>\n    </template>\n    <template #trigger>\n      <span\n        v-click-outside:[popperPaneRef]=\"hideFilterPanel\"\n        class=\"el-table__column-filter-trigger el-none-outline\"\n        @click=\"showFilterPanel\"\n      >\n        <el-icon>\n          <arrow-up v-if=\"column.filterOpened\" />\n          <arrow-down v-else />\n        </el-icon>\n      </span>\n    </template>\n  </el-popper>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, getCurrentInstance, watch } from 'vue'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowDown, ArrowUp } from '@element-plus/icons'\nimport { ClickOutside } from '@element-plus/directives'\nimport { useLocaleInject } from '@element-plus/hooks'\nimport ElPopper, { Effect } from '@element-plus/components/popper'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport type { Placement } from '@element-plus/components/popper'\n\nimport type { WritableComputedRef, PropType } from 'vue'\nimport type { TableColumnCtx } from './table-column/defaults'\nimport type { TableHeader } from './table-header'\nimport type { Store } from './store'\n\nconst { CheckboxGroup: ElCheckboxGroup } = ElCheckbox\n\nexport default defineComponent({\n  name: 'ElTableFilterPanel',\n  components: {\n    ElCheckbox,\n    ElCheckboxGroup,\n    ElScrollbar,\n    ElPopper,\n    ElIcon,\n    ArrowDown,\n    ArrowUp,\n  },\n  directives: { ClickOutside },\n  props: {\n    placement: {\n      type: String as PropType<Placement>,\n      default: 'bottom-start',\n    },\n    store: {\n      type: Object as PropType<Store<unknown>>,\n    },\n    column: {\n      type: Object as PropType<TableColumnCtx<unknown>>,\n    },\n    upDataColumn: {\n      type: Function,\n    },\n  },\n  setup(props) {\n    const instance = getCurrentInstance()\n    const { t } = useLocaleInject()\n    const parent = instance.parent as TableHeader\n    if (!parent.filterPanels.value[props.column.id]) {\n      parent.filterPanels.value[props.column.id] = instance\n    }\n    const tooltipVisible = ref(false)\n    const tooltip = ref(null)\n    const filters = computed(() => {\n      return props.column && props.column.filters\n    })\n    const filterValue = computed({\n      get: () => (props.column.filteredValue || [])[0],\n      set: (value: string) => {\n        if (filteredValue.value) {\n          if (typeof value !== 'undefined' && value !== null) {\n            filteredValue.value.splice(0, 1, value)\n          } else {\n            filteredValue.value.splice(0, 1)\n          }\n        }\n      },\n    })\n    const filteredValue: WritableComputedRef<unknown[]> = computed({\n      get() {\n        if (props.column) {\n          return props.column.filteredValue || []\n        }\n        return []\n      },\n      set(value: unknown[]) {\n        if (props.column) {\n          props.upDataColumn('filteredValue', value)\n        }\n      },\n    })\n    const multiple = computed(() => {\n      if (props.column) {\n        return props.column.filterMultiple\n      }\n      return true\n    })\n    const isActive = (filter) => {\n      return filter.value === filterValue.value\n    }\n    const hidden = () => {\n      tooltipVisible.value = false\n    }\n    const showFilterPanel = (e: MouseEvent) => {\n      e.stopPropagation()\n      tooltipVisible.value = !tooltipVisible.value\n    }\n    const hideFilterPanel = () => {\n      tooltipVisible.value = false\n    }\n    const handleConfirm = () => {\n      confirmFilter(filteredValue.value)\n      hidden()\n    }\n    const handleReset = () => {\n      filteredValue.value = []\n      confirmFilter(filteredValue.value)\n      hidden()\n    }\n    const handleSelect = (_filterValue?: string) => {\n      filterValue.value = _filterValue\n      if (typeof _filterValue !== 'undefined' && _filterValue !== null) {\n        confirmFilter(filteredValue.value)\n      } else {\n        confirmFilter([])\n      }\n      hidden()\n    }\n    const confirmFilter = (filteredValue: unknown[]) => {\n      props.store.commit('filterChange', {\n        column: props.column,\n        values: filteredValue,\n      })\n      props.store.updateAllSelected()\n    }\n    watch(\n      tooltipVisible,\n      (value) => {\n        // todo\n        if (props.column) {\n          props.upDataColumn('filterOpened', value)\n        }\n      },\n      {\n        immediate: true,\n      }\n    )\n\n    const popperPaneRef = computed(() => {\n      return tooltip.value?.popperRef\n    })\n\n    return {\n      tooltipVisible,\n      multiple,\n      filteredValue,\n      filterValue,\n      filters,\n      handleConfirm,\n      handleReset,\n      handleSelect,\n      isActive,\n      t,\n      showFilterPanel,\n      hideFilterPanel,\n      popperPaneRef,\n      tooltip,\n      Effect,\n    }\n  },\n})\n</script>\n"],"names":["ElScrollbar","ElPopper"],"mappings":"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"}