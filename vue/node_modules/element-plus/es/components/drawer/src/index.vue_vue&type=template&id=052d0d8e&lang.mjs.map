{"version":3,"file":"index.vue_vue&type=template&id=052d0d8e&lang.mjs","sources":["../../../../../../packages/components/drawer/src/index.vue?vue&type=template&id=052d0d8e&lang.js"],"sourcesContent":["<template>\n  <teleport to=\"body\" :disabled=\"!appendToBody\">\n    <transition\n      name=\"el-drawer-fade\"\n      @after-enter=\"afterEnter\"\n      @after-leave=\"afterLeave\"\n      @before-leave=\"beforeLeave\"\n    >\n      <el-overlay\n        v-show=\"visible\"\n        :mask=\"modal\"\n        :overlay-class=\"modalClass\"\n        :z-index=\"zIndex\"\n        @click=\"onModalClick\"\n      >\n        <div\n          ref=\"drawerRef\"\n          v-trap-focus\n          aria-modal=\"true\"\n          aria-labelledby=\"el-drawer__title\"\n          :aria-label=\"title\"\n          :class=\"['el-drawer', direction, visible && 'open', customClass]\"\n          :style=\"\n            isHorizontal ? 'width: ' + drawerSize : 'height: ' + drawerSize\n          \"\n          role=\"dialog\"\n          @click.stop\n        >\n          <header\n            v-if=\"withHeader\"\n            id=\"el-drawer__title\"\n            class=\"el-drawer__header\"\n          >\n            <slot name=\"title\">\n              <span role=\"heading\" :title=\"title\">\n                {{ title }}\n              </span>\n            </slot>\n            <button\n              v-if=\"showClose\"\n              :aria-label=\"'close ' + (title || 'drawer')\"\n              class=\"el-drawer__close-btn\"\n              type=\"button\"\n              @click=\"handleClose\"\n            >\n              <el-icon class=\"el-drawer__close\"><close /></el-icon>\n            </button>\n          </header>\n          <template v-if=\"rendered\">\n            <section class=\"el-drawer__body\">\n              <slot></slot>\n            </section>\n          </template>\n        </div>\n      </el-overlay>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue'\nimport { ElOverlay } from '@element-plus/components/overlay'\nimport {\n  useDialog,\n  dialogProps,\n  dialogEmits,\n} from '@element-plus/components/dialog'\nimport ElIcon from '@element-plus/components/icon'\nimport { TrapFocus } from '@element-plus/directives'\nimport { Close } from '@element-plus/icons'\n\nimport type { PropType, SetupContext } from 'vue'\n\ntype DrawerDirection = 'ltr' | 'rtl' | 'ttb' | 'btt'\n\nexport default defineComponent({\n  name: 'ElDrawer',\n  components: {\n    ElOverlay,\n    ElIcon,\n    Close,\n  },\n  directives: {\n    TrapFocus,\n  },\n  props: {\n    ...dialogProps,\n    direction: {\n      type: String as PropType<DrawerDirection>,\n      default: 'rtl',\n      validator: (val: DrawerDirection) => {\n        return ['ltr', 'rtl', 'ttb', 'btt'].indexOf(val) !== -1\n      },\n    },\n    size: {\n      type: [String, Number],\n      default: '30%',\n    },\n    withHeader: {\n      type: Boolean,\n      default: true,\n    },\n    modalFade: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  emits: dialogEmits,\n\n  setup(props, ctx) {\n    const drawerRef = ref<HTMLElement>(null)\n    return {\n      ...useDialog(props, ctx as SetupContext, drawerRef),\n      drawerRef,\n      isHorizontal: computed(\n        () => props.direction === 'rtl' || props.direction === 'ltr'\n      ),\n      drawerSize: computed(() =>\n        typeof props.size === 'number' ? `${props.size}px` : props.size\n      ),\n    }\n  },\n})\n</script>\n"],"names":["_createBlock","_createVNode","_createElementVNode","_createElementBlock","_renderSlot"],"mappings":";;;;;EA8BY,IAAG;AAAA,EACH,OAAM;AAAA;;;;;EAkBG,OAAM;AAAA;;;;;;sBAhDzBA;IAAU,IAAG;AAAA,IAAQ,WAAW;;IAC9BC;MACE,MAAK;AAAA,MACJ,cAAa;MACb,cAAa;MACb,eAAc;;uBAEf;uBAAAA;UAEG,MAAM;UACN,iBAAe;UACf,WAAS;UACT,SAAO;;2BAER;2BAAAC;cACE,KAAI;AAAA,cAEJ,cAAW;AAAA,cACX,mBAAgB;AAAA,cACf,cAAY;cACZ,oCAAqB,gBAAW,wBAAmB;cACnD;cAGD,MAAK;AAAA,cACJ,iDAAD;;;cAGQ,gCADRC,6BAAA;gBAKEC,qCAAA;kBACEF;oBAAM,MAAK;AAAA,oBAAW,OAAO;qCACxB;;gBAIC,+BADRC;;kBAEG;kBACD,OAAM;AAAA,kBACN,MAAK;AAAA,kBACJ,gDAAO;;kBAERF,kCAAS,OAAM;qCAAmB;sBAAAA,YAAS;AAAA;AAAA;;;;cAG/B,8BACdE,8BAAA;gBACEC;;;;;;;;kBAzCE;;;;;;;;;;"}