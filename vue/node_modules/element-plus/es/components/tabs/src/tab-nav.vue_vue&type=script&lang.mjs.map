{"version":3,"file":"tab-nav.vue_vue&type=script&lang.mjs","sources":["../../../../../../packages/components/tabs/src/tab-nav.vue"],"sourcesContent":["<script lang=\"ts\">\nimport {\n  h,\n  defineComponent,\n  ref,\n  inject,\n  computed,\n  onUpdated,\n  onMounted,\n  onBeforeUnmount,\n} from 'vue'\nimport { NOOP, capitalize } from '@vue/shared'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\nimport {\n  addResizeListener,\n  removeResizeListener,\n} from '@element-plus/utils/resize-event'\nimport { on, off } from '@element-plus/utils/dom'\nimport { throwError } from '@element-plus/utils/error'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowLeft, ArrowRight, Close } from '@element-plus/icons'\nimport TabBar from './tab-bar.vue'\n\nimport type { ResizableElement } from '@element-plus/utils/resize-event'\nimport type { PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils/types'\nimport type { RootTabs, Pane, ITabType } from './token'\n\ntype RefElement = Nullable<HTMLElement>\n\ninterface Scrollable {\n  next?: boolean\n  prev?: number\n}\n\nexport default defineComponent({\n  name: 'ElTabNav',\n  components: {\n    TabBar,\n  },\n  props: {\n    panes: {\n      type: Array as PropType<Pane[]>,\n      default: () => [] as Pane[],\n    },\n    currentName: {\n      type: String,\n      default: '',\n    },\n    editable: Boolean,\n    onTabClick: {\n      type: Function as PropType<\n        (tab: Pane, tabName: string, ev: Event) => void\n      >,\n      default: NOOP,\n    },\n    onTabRemove: {\n      type: Function as PropType<(tab: Pane, ev: Event) => void>,\n      default: NOOP,\n    },\n    type: {\n      type: String as PropType<ITabType>,\n      default: '',\n    },\n    stretch: Boolean,\n  },\n  setup() {\n    const rootTabs = inject<RootTabs>('rootTabs')\n    if (!rootTabs) {\n      throwError('[ElTabNav]', `ElTabNav must be nested inside ElTabs`)\n    }\n\n    const scrollable = ref<boolean | Scrollable>(false)\n    const navOffset = ref(0)\n    const isFocus = ref(false)\n    const focusable = ref(true)\n\n    const navScroll$ = ref<RefElement>(null)\n    const nav$ = ref<RefElement>(null)\n    const el$ = ref<RefElement>(null)\n\n    const sizeName = computed(() => {\n      return ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n        ? 'width'\n        : 'height'\n    })\n    const navStyle = computed(() => {\n      const dir = sizeName.value === 'width' ? 'X' : 'Y'\n      return {\n        transform: `translate${dir}(-${navOffset.value}px)`,\n      }\n    })\n\n    const scrollPrev = () => {\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (!currentOffset) return\n\n      const newOffset =\n        currentOffset > containerSize ? currentOffset - containerSize : 0\n\n      navOffset.value = newOffset\n    }\n\n    const scrollNext = () => {\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`]\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (navSize - currentOffset <= containerSize) return\n\n      const newOffset =\n        navSize - currentOffset > containerSize * 2\n          ? currentOffset + containerSize\n          : navSize - containerSize\n\n      navOffset.value = newOffset\n    }\n\n    const scrollToActiveTab = () => {\n      if (!scrollable.value) return\n      const nav = nav$.value\n      const activeTab = el$.value.querySelector('.is-active')\n      if (!activeTab) return\n      const navScroll = navScroll$.value\n      const isHorizontal = ['top', 'bottom'].includes(\n        rootTabs.props.tabPosition\n      )\n      const activeTabBounding = activeTab.getBoundingClientRect()\n      const navScrollBounding = navScroll.getBoundingClientRect()\n      const maxOffset = isHorizontal\n        ? nav.offsetWidth - navScrollBounding.width\n        : nav.offsetHeight - navScrollBounding.height\n      const currentOffset = navOffset.value\n      let newOffset = currentOffset\n\n      if (isHorizontal) {\n        if (activeTabBounding.left < navScrollBounding.left) {\n          newOffset =\n            currentOffset - (navScrollBounding.left - activeTabBounding.left)\n        }\n        if (activeTabBounding.right > navScrollBounding.right) {\n          newOffset =\n            currentOffset + activeTabBounding.right - navScrollBounding.right\n        }\n      } else {\n        if (activeTabBounding.top < navScrollBounding.top) {\n          newOffset =\n            currentOffset - (navScrollBounding.top - activeTabBounding.top)\n        }\n        if (activeTabBounding.bottom > navScrollBounding.bottom) {\n          newOffset =\n            currentOffset +\n            (activeTabBounding.bottom - navScrollBounding.bottom)\n        }\n      }\n      newOffset = Math.max(newOffset, 0)\n      navOffset.value = Math.min(newOffset, maxOffset)\n    }\n\n    const update = () => {\n      if (!nav$.value) return\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`]\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (containerSize < navSize) {\n        const currentOffset = navOffset.value\n        scrollable.value = (scrollable.value || {}) as Scrollable\n        scrollable.value.prev = currentOffset\n        scrollable.value.next = currentOffset + containerSize < navSize\n        if (navSize - currentOffset < containerSize) {\n          navOffset.value = navSize - containerSize\n        }\n      } else {\n        scrollable.value = false\n        if (currentOffset > 0) {\n          navOffset.value = 0\n        }\n      }\n    }\n\n    const changeTab = (e) => {\n      const code = e.code\n      let nextIndex\n      let currentIndex, tabList\n\n      const { up, down, left, right } = EVENT_CODE\n      if ([up, down, left, right].indexOf(code) !== -1) {\n        // 左右上下键更换tab\n        tabList = e.currentTarget.querySelectorAll('[role=tab]')\n        currentIndex = Array.prototype.indexOf.call(tabList, e.target)\n      } else {\n        return\n      }\n      if (code === left || code === up) {\n        // left\n        if (currentIndex === 0) {\n          // first\n          nextIndex = tabList.length - 1\n        } else {\n          nextIndex = currentIndex - 1\n        }\n      } else {\n        // right\n        if (currentIndex < tabList.length - 1) {\n          // not last\n          nextIndex = currentIndex + 1\n        } else {\n          nextIndex = 0\n        }\n      }\n      tabList[nextIndex].focus() // 改变焦点元素\n      tabList[nextIndex].click() // 选中下一个tab\n      setFocus()\n    }\n\n    const setFocus = () => {\n      if (focusable.value) {\n        isFocus.value = true\n      }\n    }\n\n    const removeFocus = () => {\n      isFocus.value = false\n    }\n\n    const visibilityChangeHandler = () => {\n      const visibility = document.visibilityState\n      if (visibility === 'hidden') {\n        focusable.value = false\n      } else if (visibility === 'visible') {\n        setTimeout(() => {\n          focusable.value = true\n        }, 50)\n      }\n    }\n\n    const windowBlurHandler = () => {\n      focusable.value = false\n    }\n\n    const windowFocusHandler = () => {\n      setTimeout(() => {\n        focusable.value = true\n      }, 50)\n    }\n\n    onUpdated(() => {\n      update()\n    })\n\n    onMounted(() => {\n      addResizeListener(el$.value as ResizableElement, update)\n      on(document, 'visibilitychange', visibilityChangeHandler)\n      on(window, 'blur', windowBlurHandler)\n      on(window, 'focus', windowFocusHandler)\n      setTimeout(() => {\n        scrollToActiveTab()\n      }, 0)\n    })\n\n    onBeforeUnmount(() => {\n      if (el$.value) {\n        removeResizeListener(el$.value as ResizableElement, update)\n      }\n      off(document, 'visibilitychange', visibilityChangeHandler)\n      off(window, 'blur', windowBlurHandler)\n      off(window, 'focus', windowFocusHandler)\n    })\n\n    return {\n      rootTabs,\n\n      scrollable,\n      navOffset,\n      isFocus,\n      focusable,\n\n      navScroll$,\n      nav$,\n      el$,\n\n      sizeName,\n      navStyle,\n\n      scrollPrev,\n      scrollNext,\n      scrollToActiveTab,\n      update,\n      changeTab,\n      setFocus,\n      removeFocus,\n      visibilityChangeHandler,\n      windowBlurHandler,\n      windowFocusHandler,\n    }\n  },\n  render() {\n    const {\n      type,\n      panes,\n      editable,\n      stretch,\n      onTabClick,\n      onTabRemove,\n      navStyle,\n      scrollable,\n      scrollNext,\n      scrollPrev,\n      changeTab,\n      setFocus,\n      removeFocus,\n      rootTabs,\n      isFocus,\n    } = this\n\n    const scrollBtn = scrollable\n      ? [\n          h(\n            'span',\n            {\n              class: [\n                'el-tabs__nav-prev',\n                scrollable.prev ? '' : 'is-disabled',\n              ],\n              onClick: scrollPrev,\n            },\n            [h(ElIcon, {}, { default: () => h(ArrowLeft) })]\n          ),\n          h(\n            'span',\n            {\n              class: [\n                'el-tabs__nav-next',\n                scrollable.next ? '' : 'is-disabled',\n              ],\n              onClick: scrollNext,\n            },\n            [h(ElIcon, {}, { default: () => h(ArrowRight) })]\n          ),\n        ]\n      : null\n\n    const tabs = panes.map((pane, index) => {\n      const tabName = pane.props.name || pane.index || `${index}`\n      const closable = pane.isClosable || editable\n\n      pane.index = `${index}`\n\n      const btnClose = closable\n        ? h(\n            ElIcon,\n            {\n              class: 'is-icon-close',\n              onClick: (ev) => {\n                onTabRemove(pane, ev)\n              },\n            },\n            { default: () => h(Close) }\n          )\n        : null\n\n      const tabLabelContent = pane.instance.slots.label?.() || pane.props.label\n      const tabindex = pane.active ? 0 : -1\n\n      return h(\n        'div',\n        {\n          class: {\n            'el-tabs__item': true,\n            [`is-${rootTabs.props.tabPosition}`]: true,\n            'is-active': pane.active,\n            'is-disabled': pane.props.disabled,\n            'is-closable': closable,\n            'is-focus': isFocus,\n          },\n          id: `tab-${tabName}`,\n          key: `tab-${tabName}`,\n          'aria-controls': `pane-${tabName}`,\n          role: 'tab',\n          'aria-selected': pane.active,\n          ref: `tab-${tabName}`,\n          tabindex,\n          onFocus: () => {\n            setFocus()\n          },\n          onBlur: () => {\n            removeFocus()\n          },\n          onClick: (ev) => {\n            removeFocus()\n            onTabClick(pane, tabName, ev)\n          },\n          onKeydown: (ev) => {\n            if (\n              closable &&\n              (ev.code === EVENT_CODE.delete ||\n                ev.code === EVENT_CODE.backspace)\n            ) {\n              onTabRemove(pane, ev)\n            }\n          },\n        },\n        [tabLabelContent, btnClose]\n      )\n    })\n\n    return h(\n      'div',\n      {\n        ref: 'el$',\n        class: [\n          'el-tabs__nav-wrap',\n          scrollable ? 'is-scrollable' : '',\n          `is-${rootTabs.props.tabPosition}`,\n        ],\n      },\n      [\n        scrollBtn,\n        h(\n          'div',\n          {\n            class: 'el-tabs__nav-scroll',\n            ref: 'navScroll$',\n          },\n          [\n            h(\n              'div',\n              {\n                class: [\n                  'el-tabs__nav',\n                  `is-${rootTabs.props.tabPosition}`,\n                  stretch &&\n                  ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n                    ? 'is-stretch'\n                    : '',\n                ],\n                ref: 'nav$',\n                style: navStyle,\n                role: 'tablist',\n                onKeydown: changeTab,\n              },\n              [\n                !type\n                  ? h(TabBar, {\n                      tabs: [...panes],\n                    })\n                  : null,\n                tabs,\n              ]\n            ),\n          ]\n        ),\n      ]\n    )\n  },\n})\n</script>\n"],"names":["TabBar"],"mappings":"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"}