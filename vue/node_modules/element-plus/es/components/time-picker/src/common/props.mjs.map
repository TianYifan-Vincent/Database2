{"version":3,"file":"props.mjs","sources":["../../../../../../../packages/components/time-picker/src/common/props.ts"],"sourcesContent":["import { isValidComponentSize } from '@element-plus/utils/validators'\nimport { CircleClose } from '@element-plus/icons'\n\nimport type { PropType, Component } from 'vue'\nimport type { Options } from '@popperjs/core'\nimport type { ComponentSize } from '@element-plus/utils/types'\n\nexport const timePickerDefaultProps = {\n  name: {\n    type: [Array, String],\n    default: '',\n  },\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  format: {\n    type: String,\n  },\n  valueFormat: {\n    type: String as PropType<string>,\n  },\n  type: {\n    type: String,\n    default: '',\n  },\n  clearable: {\n    type: Boolean,\n    default: true,\n  },\n  clearIcon: {\n    type: [String, Object] as PropType<string | Component>,\n    default: CircleClose,\n  },\n  editable: {\n    type: Boolean,\n    default: true,\n  },\n  prefixIcon: {\n    type: [String, Object] as PropType<string | Component>,\n    default: '',\n  },\n  size: {\n    type: String as PropType<ComponentSize>,\n    validator: isValidComponentSize,\n  },\n  readonly: {\n    type: Boolean,\n    default: false,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  placeholder: {\n    type: String,\n    default: '',\n  },\n  popperOptions: {\n    type: Object as PropType<Partial<Options>>,\n    default: () => ({}),\n  },\n  modelValue: {\n    type: [Date, Array, String] as PropType<string | Date | Date[]>,\n    default: '',\n  },\n  rangeSeparator: {\n    type: String,\n    default: '-',\n  },\n  startPlaceholder: String,\n  endPlaceholder: String,\n  defaultValue: {\n    type: [Date, Array] as PropType<Date | Date[]>,\n  },\n  defaultTime: {\n    type: [Date, Array] as PropType<Date | Date[]>,\n  },\n  isRange: {\n    type: Boolean,\n    default: false,\n  },\n  disabledHours: {\n    type: Function,\n  },\n  disabledMinutes: {\n    type: Function,\n  },\n  disabledSeconds: {\n    type: Function,\n  },\n  disabledDate: {\n    type: Function,\n  },\n  cellClassName: {\n    type: Function,\n  },\n  shortcuts: {\n    type: Array,\n    default: () => [],\n  },\n  arrowControl: {\n    type: Boolean,\n    default: false,\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  unlinkPanels: Boolean,\n}\n"],"names":[],"mappings":";;;MAOa,yBAAyB;AAAA,EACpC,MAAM;AAAA,IACJ,MAAM,CAAC,OAAO;AAAA,IACd,SAAS;AAAA;AAAA,EAEX,aAAa;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,QAAQ;AAAA,IACN,MAAM;AAAA;AAAA,EAER,aAAa;AAAA,IACX,MAAM;AAAA;AAAA,EAER,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,WAAW;AAAA,IACT,MAAM,CAAC,QAAQ;AAAA,IACf,SAAS;AAAA;AAAA,EAEX,UAAU;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,YAAY;AAAA,IACV,MAAM,CAAC,QAAQ;AAAA,IACf,SAAS;AAAA;AAAA,EAEX,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,WAAW;AAAA;AAAA,EAEb,UAAU;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,UAAU;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,aAAa;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,eAAe;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAO;AAAA,EAElB,YAAY;AAAA,IACV,MAAM,CAAC,MAAM,OAAO;AAAA,IACpB,SAAS;AAAA;AAAA,EAEX,gBAAgB;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,kBAAkB;AAAA,EAClB,gBAAgB;AAAA,EAChB,cAAc;AAAA,IACZ,MAAM,CAAC,MAAM;AAAA;AAAA,EAEf,aAAa;AAAA,IACX,MAAM,CAAC,MAAM;AAAA;AAAA,EAEf,SAAS;AAAA,IACP,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,eAAe;AAAA,IACb,MAAM;AAAA;AAAA,EAER,iBAAiB;AAAA,IACf,MAAM;AAAA;AAAA,EAER,iBAAiB;AAAA,IACf,MAAM;AAAA;AAAA,EAER,cAAc;AAAA,IACZ,MAAM;AAAA;AAAA,EAER,eAAe;AAAA,IACb,MAAM;AAAA;AAAA,EAER,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS,MAAM;AAAA;AAAA,EAEjB,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,eAAe;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,cAAc;AAAA;;;;"}