{"version":3,"file":"avatar.vue_vue&type=script&lang.js","sources":["../../../../../../packages/components/avatar/src/avatar.vue"],"sourcesContent":["<template>\n  <span :class=\"avatarClass\" :style=\"sizeStyle\">\n    <img\n      v-if=\"(src || srcSet) && !hasLoadError\"\n      :src=\"src\"\n      :alt=\"alt\"\n      :srcset=\"srcSet\"\n      :style=\"fitStyle\"\n      @error=\"handleError\"\n    />\n    <el-icon v-else-if=\"icon\"><component :is=\"icon\" /></el-icon>\n    <slot v-else></slot>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, watch } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { avatarEmits, avatarProps } from './avatar'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElAvatar',\n  components: {\n    ElIcon,\n  },\n  props: avatarProps,\n  emits: avatarEmits,\n\n  setup(props, { emit }) {\n    const hasLoadError = ref(false)\n\n    const avatarClass = computed(() => {\n      const { size, icon, shape } = props\n      const classList = ['el-avatar']\n      if (size && typeof size === 'string') classList.push(`el-avatar--${size}`)\n      if (icon) classList.push('el-avatar--icon')\n      if (shape) classList.push(`el-avatar--${shape}`)\n      return classList\n    })\n\n    const sizeStyle = computed<CSSProperties>(() => {\n      const { size } = props\n      return typeof size === 'number'\n        ? {\n            height: `${size}px`,\n            width: `${size}px`,\n            lineHeight: `${size}px`,\n          }\n        : {}\n    })\n\n    const fitStyle = computed<CSSProperties>(() => ({\n      objectFit: props.fit,\n    }))\n\n    // need reset hasLoadError to false if src changed\n    watch(\n      () => props.src,\n      () => (hasLoadError.value = false)\n    )\n\n    function handleError(e: Event) {\n      hasLoadError.value = true\n      emit('error', e)\n    }\n\n    return {\n      hasLoadError,\n      avatarClass,\n      sizeStyle,\n      fitStyle,\n      handleError,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","ElIcon","avatarProps","avatarEmits","ref","computed"],"mappings":";;;;;;;;AAsBA,aAAeA,oBAAgB;AAAA,EAC7B,MAAM;AAAA,EACN,YAAY;AAAA,YACVC;AAAA;AAAA,EAEF,OAAOC;AAAA,EACP,OAAOC;AAAA,EAEP,MAAM,OAAO,EAAE,QAAQ;AACrB,UAAM,eAAeC,QAAI;AAEzB,UAAM,cAAcC,aAAS,MAAM;AACjC,YAAM,EAAE,MAAM,MAAM,UAAU;AAC9B,YAAM,YAAY,CAAC;AACnB,UAAI,QAAQ,OAAO,SAAS;AAAU,kBAAU,KAAK,cAAc;AACnE,UAAI;AAAM,kBAAU,KAAK;AACzB,UAAI;AAAO,kBAAU,KAAK,cAAc;AACxC,aAAO;AAAA;AAGT,UAAM,YAAYA,aAAwB,MAAM;AAC9C,YAAM,EAAE,SAAS;AACjB,aAAO,OAAO,SAAS,WACnB;AAAA,QACE,QAAQ,GAAG;AAAA,QACX,OAAO,GAAG;AAAA,QACV,YAAY,GAAG;AAAA,UAEjB;AAAA;AAGN,UAAM,WAAWA,aAAwB;AAAO,MAC9C,WAAW,MAAM;AAAA;AAInB,cACE,MAAM,MAAM,KACZ,MAAO,aAAa,QAAQ;AAG9B,yBAAqB,GAAU;AAC7B,mBAAa,QAAQ;AACrB,WAAK,SAAS;AAAA;AAGhB,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA;;;;"}