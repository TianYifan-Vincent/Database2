{"version":3,"file":"jumper.vue_vue&type=template&id=772239ce&lang.js","sources":["../../../../../../../packages/components/pagination/src/components/jumper.vue?vue&type=template&id=772239ce&lang.js"],"sourcesContent":["<template>\n  <span class=\"el-pagination__jump\">\n    {{ t('el.pagination.goto') }}\n    <el-input\n      size=\"mini\"\n      class=\"el-pagination__editor is-in-pagination\"\n      :min=\"1\"\n      :max=\"pageCount\"\n      :disabled=\"disabled\"\n      :model-value=\"innerValue\"\n      type=\"number\"\n      @update:model-value=\"handleInput\"\n      @change=\"handleChange\"\n    />\n    {{ t('el.pagination.pageClassifier') }}\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref } from 'vue'\nimport { useLocaleInject } from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport { usePagination } from '../usePagination'\n\nexport default defineComponent({\n  name: 'ElPaginationJumper',\n  components: {\n    ElInput,\n  },\n\n  setup() {\n    const { t } = useLocaleInject()\n    const { pageCount, disabled, currentPage, changeEvent } = usePagination()\n    const userInput = ref<number>()\n    const innerValue = computed(() => userInput.value ?? currentPage?.value)\n\n    function handleInput(val: number | string) {\n      userInput.value = +val\n    }\n\n    function handleChange(val: number | string) {\n      changeEvent?.(+val)\n      userInput.value = undefined\n    }\n\n    return {\n      pageCount,\n      disabled,\n      innerValue,\n\n      t,\n      handleInput,\n      handleChange,\n    }\n  },\n})\n</script>\n"],"names":["_createElementBlock","_createVNode"],"mappings":";;;;;;qBACQ,OAAM;;;0BAAZA,+BAAA;4CACK;IACHC;MACE,MAAK;AAAA,MACL,OAAM;AAAA,MACL,KAAK;AAAA,MACL,KAAK;MACL,UAAU;MACV,eAAa;MACd,MAAK;AAAA,MACJ,uBAAoB;MACpB,UAAQ;;kDAER;;;;;;"}