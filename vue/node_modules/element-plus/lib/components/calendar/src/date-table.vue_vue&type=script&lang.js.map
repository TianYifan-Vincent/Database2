{"version":3,"file":"date-table.vue_vue&type=script&lang.js","sources":["../../../../../../packages/components/calendar/src/date-table.vue"],"sourcesContent":["<template>\n  <table\n    :class=\"{\n      'el-calendar-table': true,\n      'is-range': isInRange,\n    }\"\n    cellspacing=\"0\"\n    cellpadding=\"0\"\n  >\n    <thead v-if=\"!hideHeader\">\n      <th v-for=\"day in weekDays\" :key=\"day\">{{ day }}</th>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"(row, index) in rows\"\n        :key=\"index\"\n        :class=\"{\n          'el-calendar-table__row': true,\n          'el-calendar-table__row--hide-border': index === 0 && hideHeader,\n        }\"\n      >\n        <td\n          v-for=\"(cell, key) in row\"\n          :key=\"key\"\n          :class=\"getCellClass(cell)\"\n          @click=\"pickDay(cell)\"\n        >\n          <div class=\"el-calendar-day\">\n            <slot name=\"dateCell\" :data=\"getSlotData(cell)\">\n              <span>{{ cell.text }}</span>\n            </slot>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport localeData from 'dayjs/plugin/localeData'\nimport { useLocaleInject } from '@element-plus/hooks'\nimport { rangeArr } from '@element-plus/components/time-picker'\nimport type { Dayjs } from 'dayjs'\nimport type { PropType } from 'vue'\ndayjs.extend(localeData)\n\nexport const getPrevMonthLastDays = (date: Dayjs, amount) => {\n  const lastDay = date.subtract(1, 'month').endOf('month').date()\n  return rangeArr(amount).map((_, index) => lastDay - (amount - index - 1))\n}\n\nexport const getMonthDays = (date: Dayjs) => {\n  const days = date.daysInMonth()\n  return rangeArr(days).map((_, index) => index + 1)\n}\n\nexport default defineComponent({\n  props: {\n    selectedDay: {\n      type: Object as PropType<Dayjs>,\n    },\n    range: {\n      type: Array as PropType<Array<Dayjs>>,\n    },\n    date: {\n      type: Object as PropType<Dayjs>,\n    },\n    hideHeader: {\n      type: Boolean,\n    },\n  },\n  emits: ['pick'],\n  setup(props, ctx) {\n    const { lang } = useLocaleInject()\n    const WEEK_DAYS = ref(\n      dayjs().locale(lang.value).localeData().weekdaysShort()\n    )\n\n    const now = dayjs().locale(lang.value)\n\n    // todo better way to get Day.js locale object\n    const firstDayOfWeek = (now as any).$locale().weekStart || 0\n\n    const toNestedArr = (days) => {\n      return rangeArr(days.length / 7).map((_, index) => {\n        const start = index * 7\n        return days.slice(start, start + 7)\n      })\n    }\n\n    const getFormattedDate = (day, type): Dayjs => {\n      let result\n      if (type === 'prev') {\n        result = props.date.startOf('month').subtract(1, 'month').date(day)\n      } else if (type === 'next') {\n        result = props.date.startOf('month').add(1, 'month').date(day)\n      } else {\n        result = props.date.date(day)\n      }\n      return result\n    }\n\n    const getCellClass = ({ text, type }) => {\n      const classes = [type]\n      if (type === 'current') {\n        const date_ = getFormattedDate(text, type)\n        if (date_.isSame(props.selectedDay, 'day')) {\n          classes.push('is-selected')\n        }\n        if (date_.isSame(now, 'day')) {\n          classes.push('is-today')\n        }\n      }\n      return classes\n    }\n\n    const pickDay = ({ text, type }) => {\n      const date = getFormattedDate(text, type)\n      ctx.emit('pick', date)\n    }\n\n    const getSlotData = ({ text, type }) => {\n      const day = getFormattedDate(text, type)\n      return {\n        isSelected: day.isSame(props.selectedDay),\n        type: `${type}-month`,\n        day: day.format('YYYY-MM-DD'),\n        date: day.toDate(),\n      }\n    }\n\n    const isInRange = computed(() => {\n      return props.range && props.range.length\n    })\n\n    const rows = computed(() => {\n      let days = []\n      if (isInRange.value) {\n        const [start, end] = props.range\n        const currentMonthRange = rangeArr(end.date() - start.date() + 1).map(\n          (_, index) => ({\n            text: start.date() + index,\n            type: 'current',\n          })\n        )\n\n        let remaining = currentMonthRange.length % 7\n        remaining = remaining === 0 ? 0 : 7 - remaining\n        const nextMonthRange = rangeArr(remaining).map((_, index) => ({\n          text: index + 1,\n          type: 'next',\n        }))\n        days = currentMonthRange.concat(nextMonthRange)\n      } else {\n        const firstDay = props.date.startOf('month').day() || 7\n        const prevMonthDays = getPrevMonthLastDays(\n          props.date,\n          firstDay - firstDayOfWeek\n        ).map((day) => ({\n          text: day,\n          type: 'prev',\n        }))\n        const currentMonthDays = getMonthDays(props.date).map((day) => ({\n          text: day,\n          type: 'current',\n        }))\n        days = [...prevMonthDays, ...currentMonthDays]\n        const nextMonthDays = rangeArr(42 - days.length).map((_, index) => ({\n          text: index + 1,\n          type: 'next',\n        }))\n        days = days.concat(nextMonthDays)\n      }\n      return toNestedArr(days)\n    })\n\n    const weekDays = computed(() => {\n      const start = firstDayOfWeek\n\n      if (start === 0) {\n        return WEEK_DAYS.value\n      } else {\n        return WEEK_DAYS.value\n          .slice(start)\n          .concat(WEEK_DAYS.value.slice(0, start))\n      }\n    })\n\n    return {\n      isInRange,\n      weekDays,\n      rows,\n      getCellClass,\n      pickDay,\n      getSlotData,\n    }\n  },\n})\n</script>\n"],"names":["dayjs","localeData","rangeArr","defineComponent","useLocaleInject","ref","computed"],"mappings":"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"}