{"version":3,"file":"node.vue_vue&type=script&lang.js","sources":["../../../../../../packages/components/cascader-panel/src/node.vue"],"sourcesContent":["<template>\n  <li\n    :id=\"`${menuId}-${node.uid}`\"\n    role=\"menuitem\"\n    :aria-haspopup=\"!isLeaf\"\n    :aria-owns=\"isLeaf ? null : menuId\"\n    :aria-expanded=\"inExpandingPath\"\n    :tabindex=\"expandable ? -1 : undefined\"\n    :class=\"[\n      'el-cascader-node',\n      checkStrictly && 'is-selectable',\n      inExpandingPath && 'in-active-path',\n      inCheckedPath && 'in-checked-path',\n      node.checked && 'is-active',\n      !expandable && 'is-disabled',\n    ]\"\n    @mouseenter=\"handleHoverExpand\"\n    @focus=\"handleHoverExpand\"\n    @click=\"handleClick\"\n  >\n    <!-- prefix -->\n    <el-checkbox\n      v-if=\"multiple\"\n      :model-value=\"node.checked\"\n      :indeterminate=\"node.indeterminate\"\n      :disabled=\"isDisabled\"\n      @click.stop\n      @update:model-value=\"handleCheck\"\n    />\n    <el-radio\n      v-else-if=\"checkStrictly\"\n      :model-value=\"checkedNodeId\"\n      :label=\"node.uid\"\n      :disabled=\"isDisabled\"\n      @update:model-value=\"handleCheck\"\n      @click.stop\n    >\n      <!--\n        Add an empty element to avoid render label,\n        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485\n      -->\n      <span></span>\n    </el-radio>\n    <el-icon\n      v-else-if=\"isLeaf && node.checked\"\n      class=\"el-cascader-node__prefix\"\n    >\n      <check />\n    </el-icon>\n\n    <!-- content -->\n    <node-content />\n\n    <!-- postfix -->\n    <template v-if=\"!isLeaf\">\n      <el-icon v-if=\"node.loading\" class=\"is-loading el-cascader-node__postfix\">\n        <loading />\n      </el-icon>\n      <el-icon v-else class=\"arrow-right el-cascader-node__postfix\">\n        <arrow-right />\n      </el-icon>\n    </template>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject } from 'vue'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport ElRadio from '@element-plus/components/radio'\nimport ElIcon from '@element-plus/components/icon'\nimport { Check, Loading, ArrowRight } from '@element-plus/icons'\nimport NodeContent from './node-content'\nimport { CASCADER_PANEL_INJECTION_KEY } from './types'\nimport type { default as CascaderNode } from './node'\n\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'ElCascaderNode',\n\n  components: {\n    ElCheckbox,\n    ElRadio,\n    NodeContent,\n    ElIcon,\n    Check,\n    Loading,\n    ArrowRight,\n  },\n\n  props: {\n    node: {\n      type: Object as PropType<CascaderNode>,\n      required: true,\n    },\n    menuId: String,\n  },\n\n  emits: ['expand'],\n\n  setup(props, { emit }) {\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY)!\n\n    const isHoverMenu = computed(() => panel.isHoverMenu)\n    const multiple = computed(() => panel.config.multiple)\n    const checkStrictly = computed(() => panel.config.checkStrictly)\n    const checkedNodeId = computed(() => panel.checkedNodes[0]?.uid)\n    const isDisabled = computed(() => props.node.isDisabled)\n    const isLeaf = computed(() => props.node.isLeaf)\n    const expandable = computed(\n      () => (checkStrictly.value && !isLeaf.value) || !isDisabled.value\n    )\n    const inExpandingPath = computed(() => isInPath(panel.expandingNode!))\n    // only useful in check-strictly mode\n    const inCheckedPath = computed(\n      () => checkStrictly.value && panel.checkedNodes.some(isInPath)\n    )\n\n    const isInPath = (node: CascaderNode) => {\n      const { level, uid } = props.node\n      return node?.pathNodes[level - 1]?.uid === uid\n    }\n\n    const doExpand = () => {\n      if (inExpandingPath.value) return\n      panel.expandNode(props.node)\n    }\n\n    const doCheck = (checked: boolean) => {\n      const { node } = props\n      if (checked === node.checked) return\n      panel.handleCheckChange(node, checked)\n    }\n\n    const doLoad = () => {\n      panel.lazyLoad(props.node, () => {\n        if (!isLeaf.value) doExpand()\n      })\n    }\n\n    const handleHoverExpand = (e: Event) => {\n      if (!isHoverMenu.value) return\n      handleExpand()\n      !isLeaf.value && emit('expand', e)\n    }\n\n    const handleExpand = () => {\n      const { node } = props\n      // do not exclude leaf node because the menus expanded might have to reset\n      if (!expandable.value || node.loading) return\n      node.loaded ? doExpand() : doLoad()\n    }\n\n    const handleClick = () => {\n      if (isHoverMenu.value && !isLeaf.value) return\n\n      if (\n        isLeaf.value &&\n        !isDisabled.value &&\n        !checkStrictly.value &&\n        !multiple.value\n      ) {\n        handleCheck(true)\n      } else {\n        handleExpand()\n      }\n    }\n\n    const handleCheck = (checked: boolean) => {\n      if (!props.node.loaded) {\n        doLoad()\n      } else {\n        doCheck(checked)\n        !checkStrictly.value && doExpand()\n      }\n    }\n\n    return {\n      panel,\n      isHoverMenu,\n      multiple,\n      checkStrictly,\n      checkedNodeId,\n      isDisabled,\n      isLeaf,\n      expandable,\n      inExpandingPath,\n      inCheckedPath,\n      handleHoverExpand,\n      handleExpand,\n      handleClick,\n      handleCheck,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","ElCheckbox","ElRadio","NodeContent","ElIcon","Check","Loading","ArrowRight","inject","CASCADER_PANEL_INJECTION_KEY","computed"],"mappings":";;;;;;;;;;;;AA6EA,aAAeA,oBAAgB;AAAA,EAC7B,MAAM;AAAA,EAEN,YAAY;AAAA,gBACVC;AAAA,aACAC;AAAA,iBACAC;AAAA,YACAC;AAAA,WACAC;AAAA,aACAC;AAAA,gBACAC;AAAA;AAAA,EAGF,OAAO;AAAA,IACL,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ,QAAQ;AAAA;AAAA,EAGV,OAAO,CAAC;AAAA,EAER,MAAM,OAAO,EAAE,QAAQ;AACrB,UAAM,QAAQC,WAAOC;AAErB,UAAM,cAAcC,aAAS,MAAM,MAAM;AACzC,UAAM,WAAWA,aAAS,MAAM,MAAM,OAAO;AAC7C,UAAM,gBAAgBA,aAAS,MAAM,MAAM,OAAO;AAClD,UAAM,gBAAgBA,aAAS,MAAG;;AAAG,yBAAM,aAAa,OAAnB,mBAAuB;AAAA;AAC5D,UAAM,aAAaA,aAAS,MAAM,MAAM,KAAK;AAC7C,UAAM,SAASA,aAAS,MAAM,MAAM,KAAK;AACzC,UAAM,aAAaA,aACjB,MAAO,cAAc,SAAS,CAAC,OAAO,SAAU,CAAC,WAAW;AAE9D,UAAM,kBAAkBA,aAAS,MAAM,SAAS,MAAM;AAEtD,UAAM,gBAAgBA,aACpB,MAAM,cAAc,SAAS,MAAM,aAAa,KAAK;AAGvD,UAAM,WAAW,CAAC,SAAuB;;AACvC,YAAM,EAAE,OAAO,QAAQ,MAAM;AAC7B,aAAO,oCAAM,UAAU,QAAQ,OAAxB,mBAA4B,SAAQ;AAAA;AAG7C,UAAM,WAAW,MAAM;AACrB,UAAI,gBAAgB;AAAO;AAC3B,YAAM,WAAW,MAAM;AAAA;AAGzB,UAAM,UAAU,CAAC,YAAqB;AACpC,YAAM,EAAE,SAAS;AACjB,UAAI,YAAY,KAAK;AAAS;AAC9B,YAAM,kBAAkB,MAAM;AAAA;AAGhC,UAAM,SAAS,MAAM;AACnB,YAAM,SAAS,MAAM,MAAM,MAAM;AAC/B,YAAI,CAAC,OAAO;AAAO;AAAA;AAAA;AAIvB,UAAM,oBAAoB,CAAC,MAAa;AACtC,UAAI,CAAC,YAAY;AAAO;AACxB;AACA,OAAC,OAAO,SAAS,KAAK,UAAU;AAAA;AAGlC,UAAM,eAAe,MAAM;AACzB,YAAM,EAAE,SAAS;AAEjB,UAAI,CAAC,WAAW,SAAS,KAAK;AAAS;AACvC,WAAK,SAAS,aAAa;AAAA;AAG7B,UAAM,cAAc,MAAM;AACxB,UAAI,YAAY,SAAS,CAAC,OAAO;AAAO;AAExC,UACE,OAAO,SACP,CAAC,WAAW,SACZ,CAAC,cAAc,SACf,CAAC,SAAS,OACV;AACA,oBAAY;AAAA,aACP;AACL;AAAA;AAAA;AAIJ,UAAM,cAAc,CAAC,YAAqB;AACxC,UAAI,CAAC,MAAM,KAAK,QAAQ;AACtB;AAAA,aACK;AACL,gBAAQ;AACR,SAAC,cAAc,SAAS;AAAA;AAAA;AAI5B,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA;;;;"}